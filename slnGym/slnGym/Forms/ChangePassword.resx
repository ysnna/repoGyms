<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ggAAAABJRU5ErkJggg==
</value>
  </data>
</root>