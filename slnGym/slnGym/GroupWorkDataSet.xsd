<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GroupWorkDataSet" targetNamespace="http://tempuri.org/GroupWorkDataSet.xsd" xmlns:mstns="http://tempuri.org/GroupWorkDataSet.xsd" xmlns="http://tempuri.org/GroupWorkDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GYMManagerConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GYMManagerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.slnGym.Properties.Settings.GlobalReference.Default.GYMManagerConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GROUPWORKTableAdapter" GeneratorDataComponentClassName="GROUPWORKTableAdapter" Name="GROUPWORK" UserDataComponentName="GROUPWORKTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GYMManagerConnectionString (Settings)" DbObjectName="GYMManager.dbo.GROUPWORK" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GROUPWORK] WHERE (([groupWorkID] = @Original_groupWorkID) AND ([groupWorkName] = @Original_groupWorkName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_groupWorkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="groupWorkID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_groupWorkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="groupWorkName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GROUPWORK] ([groupWorkID], [groupWorkName]) VALUES (@groupWorkID, @groupWorkName);
SELECT groupWorkID, groupWorkName FROM GROUPWORK WHERE (groupWorkID = @groupWorkID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@groupWorkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="groupWorkID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@groupWorkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="groupWorkName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT groupWorkID, groupWorkName FROM dbo.GROUPWORK</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GROUPWORK] SET [groupWorkID] = @groupWorkID, [groupWorkName] = @groupWorkName WHERE (([groupWorkID] = @Original_groupWorkID) AND ([groupWorkName] = @Original_groupWorkName));
SELECT groupWorkID, groupWorkName FROM GROUPWORK WHERE (groupWorkID = @groupWorkID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@groupWorkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="groupWorkID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@groupWorkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="groupWorkName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_groupWorkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="groupWorkID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_groupWorkName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="groupWorkName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="groupWorkID" DataSetColumn="groupWorkID" />
              <Mapping SourceColumn="groupWorkName" DataSetColumn="groupWorkName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GroupWorkDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GroupWorkDataSet" msprop:Generator_UserDSName="GroupWorkDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="GROUPWORK" msprop:Generator_TableClassName="GROUPWORKDataTable" msprop:Generator_TableVarName="tableGROUPWORK" msprop:Generator_TablePropName="GROUPWORK" msprop:Generator_RowDeletingName="GROUPWORKRowDeleting" msprop:Generator_RowChangingName="GROUPWORKRowChanging" msprop:Generator_RowEvHandlerName="GROUPWORKRowChangeEventHandler" msprop:Generator_RowDeletedName="GROUPWORKRowDeleted" msprop:Generator_UserTableName="GROUPWORK" msprop:Generator_RowChangedName="GROUPWORKRowChanged" msprop:Generator_RowEvArgName="GROUPWORKRowChangeEvent" msprop:Generator_RowClassName="GROUPWORKRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="groupWorkID" msprop:Generator_ColumnVarNameInTable="columngroupWorkID" msprop:Generator_ColumnPropNameInRow="groupWorkID" msprop:Generator_ColumnPropNameInTable="groupWorkIDColumn" msprop:Generator_UserColumnName="groupWorkID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="groupWorkName" msprop:Generator_ColumnVarNameInTable="columngroupWorkName" msprop:Generator_ColumnPropNameInRow="groupWorkName" msprop:Generator_ColumnPropNameInTable="groupWorkNameColumn" msprop:Generator_UserColumnName="groupWorkName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GROUPWORK" />
      <xs:field xpath="mstns:groupWorkID" />
    </xs:unique>
  </xs:element>
</xs:schema>